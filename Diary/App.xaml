<Application
	x:Class="Diary.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls;assembly=ModernThemables"
	xmlns:converters="clr-namespace:Diary.Converters"
	xmlns:mt="clr-namespace:ModernThemables.ViewModels;assembly=ModernThemables"
	xmlns:scalableicons="clr-namespace:ModernThemables.Icons;assembly=ModernThemables.Icons"
	xmlns:vms="clr-namespace:Diary.ViewModels.Views">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/ModernThemables.Icons;component/Themes/Generic.xaml" />
				<ResourceDictionary Source="/ModernThemables;component/Themes/Generic.xaml" />
				<ResourceDictionary Source="/ModernThemables;component/Themes/Rounded.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<converters:MenuLeftPaddingConverter x:Key="MenuLeftPaddingConverter" />
			<converters:DateTimeToDoubleConverter x:Key="DateTimeToDoubleConverter" />
			<converters:DoubleHighlighterConverter x:Key="DoubleHighlighterConverter" />
			<converters:DoubleIsNegativeConverter x:Key="DoubleIsNegativeConverter" />
			<converters:MultiBindingDoubleIsNegativeConverter x:Key="MultiBindingDoubleIsNegativeConverter" />
			<converters:MultiBindingDoubleHighlighterConverter x:Key="MultiBindingDoubleHighlighterConverter" />
			<converters:IntMonthConverter x:Key="IntMonthConverter" />
			<converters:ActionIconConverter x:Key="ActionIconConverter" />
			<converters:MenuBehaviourConverter x:Key="MenuBehaviourConverter" />

			<SolidColorBrush x:Key="FinanceGreenBrush" Color="#16c784" />
			<SolidColorBrush x:Key="FinanceRedBrush" Color="#ea3943" />

			<!--#region Round button style-->
			<Style
				x:Key="RoundButtonStyle"
				BasedOn="{StaticResource ResourceKey={x:Type controls:ExtendedButton}}"
				TargetType="{x:Type controls:ExtendedButton}">
				<Setter Property="Width" Value="20" />
				<Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=Width}" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{DynamicResource ControlClickablePartBrush}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="CornerRadius" Value="5" />
				<Setter Property="MouseDownColour" Value="{DynamicResource ControlClickablePartMouseDownBrush}" />
				<Setter Property="MouseOverColour" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
			</Style>
			<!--#endregion-->

			<!--#region Pill button style-->
			<Style
				x:Key="PillButtonStyle"
				BasedOn="{StaticResource ResourceKey={x:Type controls:ExtendedButton}}"
				TargetType="{x:Type controls:ExtendedButton}">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="20" />
				<Setter Property="Padding" Value="10,0" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{DynamicResource ControlClickablePartBrush}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="CornerRadius" Value="5" />
				<Setter Property="MouseDownColour" Value="{DynamicResource ControlClickablePartMouseDownBrush}" />
				<Setter Property="MouseOverColour" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
			</Style>
			<!--#endregion-->

			<!--#region Pill togglebutton style-->
			<Style
				x:Key="PillToggleButtonStyle"
				BasedOn="{StaticResource ResourceKey={x:Type controls:ExtendedToggleButton}}"
				TargetType="{x:Type controls:ExtendedToggleButton}">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="20" />
				<Setter Property="Padding" Value="10,0" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="CheckedColour" Value="{DynamicResource ControlClickablePartBrush}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="CornerRadius" Value="5" />
				<Setter Property="MouseDownColour" Value="{DynamicResource ControlClickablePartMouseDownBrush}" />
				<Setter Property="MouseOverColour" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
			</Style>
			<!--#endregion-->

			<!--#region Menu item data template-->
			<DataTemplate x:Key="MenuItemDataTemplate" DataType="{x:Type mt:ViewModelBase}">
				<Grid x:Name="MainGrid" Margin="0,3,0,0">
					<!--#region Menu item icons-->
					<!--#endregion-->
					<Border
						Background="{DynamicResource TextBrush}"
						Opacity="0.05"
						Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}" />
					<Border
						Width="3"
						HorizontalAlignment="Left"
						Background="{DynamicResource ThemeBrush}">
						<Border.Visibility>
							<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
								<Binding Path="IsShowingChildren" />
								<Binding
									Converter="{StaticResource IsIntegerConverter}"
									ConverterParameter="1"
									Path="Level" />
							</MultiBinding>
						</Border.Visibility>
					</Border>
					<StackPanel>
						<!--#region Single item grid-->
						<Grid x:Name="SingleItemGrid">
							<Grid.Background>
								<SolidColorBrush Opacity="0.01" Color="Black" />
							</Grid.Background>
							<Border>
								<controls:ExtendedButton
									x:Name="Button"
									Width="Auto"
									Height="40"
									Margin="5,2"
									VerticalAlignment="Top"
									HorizontalContentAlignment="Left"
									Background="Transparent"
									BorderThickness="0"
									Command="{Binding SelectCommand}"
									CornerRadius="5"
									Foreground="{DynamicResource TextBrush}"
									MouseDownColour="{DynamicResource MenuMouseDownBrush}"
									MouseOverColour="{DynamicResource MenuMouseOverBrush}" />
								<Border.Effect>
									<DropShadowEffect
										BlurRadius="30"
										Opacity="0.6"
										ShadowDepth="0"
										Color="{DynamicResource InvertedTextColour}" />
								</Border.Effect>
								<Border.Style>
									<Style>
										<Setter Property="ToolTipService.InitialShowDelay" Value="200" />
									</Style>
								</Border.Style>
								<Border.ToolTip>
									<ToolTip Style="{StaticResource InfoTooltipHorizontal}" Visibility="{Binding IsCollapsed, Converter={StaticResource VisibleIfTrueConverter}}">
										<TextBlock FontSize="17" Text="{Binding Name}" />
									</ToolTip>
								</Border.ToolTip>
							</Border>
							<Border
								Height="1"
								Margin="5,0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Bottom"
								Background="{DynamicResource StatusTextLightBrush}"
								IsHitTestVisible="False"
								Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}" />
							<!--#region Icon and label-->
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<!--#region Selection indicator-->
								<Border
									Grid.ColumnSpan="4"
									Margin="5,2"
									Background="{DynamicResource ThemeBrush}"
									CornerRadius="5"
									IsHitTestVisible="False"
									Opacity="0.5"
									Visibility="{Binding IsSelected, Converter={StaticResource VisibleIfTrueConverter}, UpdateSourceTrigger=PropertyChanged}" />
								<!--#endregion-->
								<!--#region Spacer-->
								<Grid
									Grid.Column="1"
									Width="{Binding Level, Converter={StaticResource MenuLeftPaddingConverter}, ConverterParameter=12}"
									Visibility="{Binding IsCollapsed, Converter={StaticResource VisibleIfFalseConverter}}" />
								<!--#endregion-->
								<!--#region Icon-->
								<ContentControl
									Grid.Column="2"
									Width="20"
									Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
									MaxWidth="20"
									Margin="15,0,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Content="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, UpdateSourceTrigger=PropertyChanged}"
									Focusable="False"
									IsHitTestVisible="False">
									<ContentControl.Visibility>
										<MultiBinding Converter="{StaticResource MultiBoolOrToVisibilityConverter}">
											<Binding Path="IsCollapsed" />
											<Binding
												Converter="{StaticResource IsIntegerConverter}"
												ConverterParameter="1"
												Path="Level" />
										</MultiBinding>
									</ContentControl.Visibility>
									<ContentControl.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter Property="ContentControl.Foreground" Value="{DynamicResource ThemeTextBrush}" />
													<Setter Property="ContentControl.Background" Value="{DynamicResource ThemeBackgroundBrush}" />
												</DataTrigger>
												<DataTrigger Binding="{Binding IsSelected}" Value="False">
													<Setter Property="ContentControl.Foreground" Value="{DynamicResource StatusTextBrush}" />
													<Setter Property="ContentControl.Background" Value="{DynamicResource MenuBrush}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</ContentControl.Style>
								</ContentControl>
								<!--#endregion-->
								<Label
									Grid.Column="3"
									Margin="10,0,0,0"
									Padding="0"
									VerticalAlignment="Center"
									Content="{Binding Name}"
									IsHitTestVisible="False"
									Visibility="{Binding IsCollapsed, Converter={StaticResource VisibleIfFalseConverter}}">
									<Label.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter Property="Label.Foreground" Value="{DynamicResource ThemeTextBrush}" />
												</DataTrigger>
												<DataTrigger Binding="{Binding IsSelected}" Value="False">
													<Setter Property="Label.Foreground" Value="{DynamicResource TextBrush}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Label.Style>
								</Label>
							</Grid>
							<!--#endregion-->
							<!--#region Add child button-->
							<controls:ExtendedButton
								Margin="0,0,32,0"
								HorizontalAlignment="Right"
								Background="Transparent"
								Command="{Binding AddChildCommand}"
								ToolTip="Add">
								<controls:ExtendedButton.Style>
									<Style BasedOn="{StaticResource RoundButtonStyle}" TargetType="{x:Type controls:ExtendedButton}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsSelected}" Value="True">
												<Setter Property="controls:ExtendedButton.Foreground" Value="{DynamicResource ThemeTextBrush}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding IsSelected}" Value="False">
												<Setter Property="controls:ExtendedButton.Foreground" Value="{DynamicResource StatusTextBrush}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</controls:ExtendedButton.Style>
								<controls:ExtendedButton.Visibility>
									<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
										<Binding Path="SupportsAddingChildren" />
										<Binding Converter="{StaticResource BoolInverter}" Path="IsCollapsed" />
									</MultiBinding>
								</controls:ExtendedButton.Visibility>
								<scalableicons:Icon
									Margin="2"
									Kind="Plus"
									Visibility="{Binding ElementName=SingleItemGrid, Path=IsMouseOver, Converter={StaticResource VisibleIfTrueConverter}, ConverterParameter=Hidden}" />
							</controls:ExtendedButton>
							<!--#endregion-->
							<!--#region Drop down indicator-->
							<Grid
								Width="10"
								Height="10"
								Margin="0,3,15,0"
								HorizontalAlignment="Right"
								IsHitTestVisible="False"
								RenderTransformOrigin="0.5,0.5">
								<Grid.Visibility>
									<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
										<Binding Converter="{StaticResource SequenceHasElementsBooleanConverter}" Path="ChildViewModels" />
										<Binding Converter="{StaticResource BoolInverter}" Path="IsCollapsed" />
										<Binding Path="AllowShowDropdownIndicator" />
									</MultiBinding>
								</Grid.Visibility>
								<Grid.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsShowingChildren}" Value="True">
												<Setter Property="Grid.RenderTransform">
													<Setter.Value>
														<RotateTransform Angle="180" />
													</Setter.Value>
												</Setter>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<scalableicons:Icon
									Height="5"
									Foreground="{DynamicResource TextBrush}"
									Kind="Expand"
									Visibility="{Binding ElementName=BinIcon, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}" />
							</Grid>
							<!--#endregion-->
							<!--#region Delete button-->
							<controls:ExtendedButton
								x:Name="DeleteButton"
								Margin="10,0"
								Padding="3"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Background="Transparent"
								Command="{Binding RequestDeleteCommand}"
								ToolTip="Delete">
								<controls:ExtendedButton.Style>
									<Style BasedOn="{StaticResource RoundButtonStyle}" TargetType="{x:Type controls:ExtendedButton}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsSelected}" Value="True">
												<Setter Property="controls:ExtendedButton.Foreground" Value="{DynamicResource ThemeTextBrush}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding IsSelected}" Value="False">
												<Setter Property="controls:ExtendedButton.Foreground" Value="{DynamicResource StatusTextBrush}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</controls:ExtendedButton.Style>
								<controls:ExtendedButton.Visibility>
									<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
										<Binding Path="SupportsDeleting" />
										<Binding Converter="{StaticResource BoolInverter}" Path="IsCollapsed" />
									</MultiBinding>
								</controls:ExtendedButton.Visibility>
								<scalableicons:Icon
									x:Name="BinIcon"
									Margin="1,0,0,0"
									Kind="Bin"
									Visibility="{Binding ElementName=SingleItemGrid, Path=IsMouseOver, Converter={StaticResource VisibleIfTrueConverter}, ConverterParameter=Hidden}" />
							</controls:ExtendedButton>
							<!--#endregion-->
						</Grid>
						<!--#endregion-->
						<!--#region Child items-->
						<Grid Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
							<ItemsControl
								VerticalAlignment="Bottom"
								ItemTemplate="{DynamicResource MenuItemDataTemplate}"
								ItemsSource="{Binding ChildViewModels, UpdateSourceTrigger=PropertyChanged}" />
						</Grid>
						<!--#endregion-->
					</StackPanel>
				</Grid>
			</DataTemplate>
			<!--#endregion-->

			<!--#region Day menu item data template-->
			<DataTemplate x:Key="DayMenuItemDataTemplate" DataType="{x:Type vms:DiaryDayViewModel}">
				<Grid x:Name="MainGrid">
					<StackPanel>
						<!--#region Header-->
						<Grid>
							<!--#region Menu Item Button-->
							<Border>
								<controls:ExtendedButton
									x:Name="Button"
									Width="Auto"
									Height="{Binding ElementName=ContentGrid, Path=ActualHeight}"
									MinHeight="40"
									Margin="5,1"
									VerticalAlignment="Top"
									HorizontalContentAlignment="Left"
									Background="Transparent"
									BorderThickness="0"
									Command="{Binding SelectCommand}"
									CornerRadius="5"
									Foreground="{DynamicResource TextBrush}"
									MouseDownColour="{DynamicResource MenuMouseDownBrush}"
									MouseOverColour="{DynamicResource MenuMouseOverBrush}" />
								<Border.Effect>
									<DropShadowEffect
										BlurRadius="30"
										Opacity="0.6"
										ShadowDepth="0"
										Color="{DynamicResource InvertedTextColour}" />
								</Border.Effect>
							</Border>
							<!--#endregion-->
							<!--#region Selection indicator-->
							<Border
								Margin="5,1"
								Background="{DynamicResource ThemeBrush}"
								CornerRadius="5"
								IsHitTestVisible="False"
								Opacity="0.5"
								Visibility="{Binding IsSelected, Converter={StaticResource VisibleIfTrueConverter}, UpdateSourceTrigger=PropertyChanged}" />
							<!--#endregion-->
							<!--#region Item content-->
							<Grid x:Name="ContentGrid" VerticalAlignment="Center">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label
									Width="{Binding ElementName=ContentGrid, Path=ActualWidth, ConverterParameter=-50, Converter={StaticResource ValueAdderConverter}}"
									Margin="0,3,15,-2"
									Padding="0"
									VerticalAlignment="Center"
									Content="{Binding DayOfWeek}"
									FontSize="10"
									IsHitTestVisible="False">
									<Label.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter Property="Label.FontWeight" Value="SemiBold" />
													<Setter Property="Label.FontSize" Value="14" />
													<Setter Property="Label.Foreground" Value="{DynamicResource ThemeTextBrush}" />
												</DataTrigger>
												<DataTrigger Binding="{Binding IsSelected}" Value="False">
													<Setter Property="Label.Foreground" Value="{DynamicResource StatusTextBrush}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Label.Style>
								</Label>
								<Label
									Grid.Row="1"
									Margin="20,3"
									Padding="0"
									VerticalAlignment="Center"
									Content="{Binding Name}"
									IsHitTestVisible="False">
									<Label.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter Property="Label.FontWeight" Value="SemiBold" />
													<Setter Property="Label.FontSize" Value="14" />
													<Setter Property="Label.Foreground" Value="{DynamicResource ThemeTextBrush}" />
												</DataTrigger>
												<DataTrigger Binding="{Binding IsSelected}" Value="False">
													<Setter Property="Label.Foreground" Value="{DynamicResource TextBrush}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Label.Style>
								</Label>
							</Grid>
							<!--#endregion-->
						</Grid>
						<!--#endregion-->
					</StackPanel>
				</Grid>
			</DataTemplate>
			<!--#endregion-->
		</ResourceDictionary>
	</Application.Resources>
</Application>