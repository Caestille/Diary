<UserControl
	x:Class="Diary.Views.ToDoListView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:controls="clr-namespace:ModernThemables.Controls;assembly=ModernThemables"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helperclasses="clr-namespace:CoreUtilities.HelperClasses;assembly=CoreUtilities"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="clr-namespace:Diary.Models"
	xmlns:mvvm="clr-namespace:Microsoft.Toolkit.Mvvm.ComponentModel;assembly=Microsoft.Toolkit.Mvvm"
	xmlns:scalableicons="clr-namespace:ModernThemables.Icons;assembly=ModernThemables.Icons"
	x:Name="root"
	mc:Ignorable="d">
	<UserControl.Resources>
		<DataTemplate x:Key="ToDoItemTemplate" DataType="{x:Type models:ToDoItem}">
			<controls:ExtendedButton
				x:Name="BorderBoi"
				MaxWidth="280"
				Margin="0,0,0,10"
				HorizontalAlignment="Stretch"
				Background="{DynamicResource MenuBrush}"
				BorderThickness="0"
				Command="{Binding ElementName=root, Path=DataContext.EditItemCommand}"
				CommandParameter="{Binding}"
				CornerRadius="5"
				Foreground="{DynamicResource TextBrush}"
				MouseOverColour="{DynamicResource StatusTextLightBrush}">
				<Grid Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Border
						Grid.RowSpan="10"
						Grid.ColumnSpan="10"
						Margin="-5"
						Background="Red"
						CornerRadius="5"
						IsHitTestVisible="False"
						Opacity="0.5"
						Visibility="{Binding IsWarning, Converter={StaticResource VisibleIfTrueConverter}}" />
					<controls:ExtendedButton
						Grid.ColumnSpan="10"
						Height="10"
						Margin="-5,-5,-5,0"
						Background="Transparent"
						BorderThickness="0"
						Command="{Binding ElementName=root, Path=DataContext.DecreaseIndexCommand}"
						CommandParameter="{Binding}"
						CornerRadius="2"
						MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
						MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
						<controls:ExtendedButton.Visibility>
							<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}" ConverterParameter="Hidden">
								<Binding ElementName="BorderBoi" Path="IsMouseOver" />
								<Binding Converter="{StaticResource BoolInverter}" Path="IsDone" />
							</MultiBinding>
						</controls:ExtendedButton.Visibility>
						<scalableicons:Icon
							Width="10"
							Height="5"
							Foreground="{DynamicResource TextBrush}"
							Kind="Collapse" />
					</controls:ExtendedButton>
					<controls:ExtendedButton
						Grid.Row="2"
						Grid.ColumnSpan="10"
						Height="10"
						Margin="-5,0,-5,-5"
						Background="Transparent"
						BorderThickness="0"
						Command="{Binding ElementName=root, Path=DataContext.IncreaseIndexCommand}"
						CommandParameter="{Binding}"
						CornerRadius="2"
						MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
						MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
						<controls:ExtendedButton.Visibility>
							<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}" ConverterParameter="Hidden">
								<Binding ElementName="BorderBoi" Path="IsMouseOver" />
								<Binding Converter="{StaticResource BoolInverter}" Path="IsDone" />
							</MultiBinding>
						</controls:ExtendedButton.Visibility>
						<scalableicons:Icon
							Width="10"
							Height="5"
							Foreground="{DynamicResource TextBrush}"
							Kind="Expand" />
					</controls:ExtendedButton>
					<Grid
						Grid.Row="1"
						Grid.Column="1"
						VerticalAlignment="Center">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<TextBlock
							Grid.Column="1"
							FontSize="15"
							FontWeight="Bold"
							Foreground="{DynamicResource TextBrush}"
							Text="{Binding Name}"
							TextWrapping="Wrap" />
						<Grid
							Grid.Row="1"
							Grid.Column="1"
							Visibility="{Binding Description, Converter={StaticResource StringNotEmptyVisibilityConverter}}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock
								x:Name="DescriptionBlock"
								FontSize="11"
								Foreground="{DynamicResource StatusTextBrush}"
								Text="{Binding Description}"
								TextTrimming="CharacterEllipsis">
								<TextBlock.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsDescriptionExpanded}" Value="True">
												<Setter Property="TextBlock.TextWrapping" Value="Wrap" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<controls:ExtendedButton
								Grid.Column="1"
								Width="18"
								Height="18"
								Margin="3,0,0,0"
								VerticalAlignment="Top"
								Background="Transparent"
								Command="{Binding ToggleExpandDescriptionCommand}">
								<controls:ExtendedButton.Style>
									<Style BasedOn="{StaticResource RoundButtonStyle}" TargetType="{x:Type controls:ExtendedButton}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsDescriptionExpanded}" Value="True">
												<Setter Property="controls:ExtendedButton.Content">
													<Setter.Value>
														<scalableicons:Icon
															Height="6"
															Margin="2,-1,2,2"
															Foreground="{DynamicResource ButtonForegroundBrush}"
															Kind="Collapse" />
													</Setter.Value>
												</Setter>
											</DataTrigger>
											<DataTrigger Binding="{Binding IsDescriptionExpanded}" Value="False">
												<Setter Property="controls:ExtendedButton.Content">
													<Setter.Value>
														<scalableicons:Icon
															Height="6"
															Margin="2,-1,2,2"
															Foreground="{DynamicResource ButtonForegroundBrush}"
															Kind="Expand" />
													</Setter.Value>
												</Setter>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</controls:ExtendedButton.Style>
							</controls:ExtendedButton>
						</Grid>
						<WrapPanel
							Grid.Row="2"
							Grid.Column="1"
							Margin="0,5,0,0"
							Visibility="{Binding Deadline, Converter={StaticResource VisibleIfNotNullConverter}}">
							<TextBlock
								VerticalAlignment="Center"
								FontSize="10"
								Foreground="{DynamicResource StatusTextBrush}"
								Text="Due: " />
							<TextBlock Text="{Binding Deadline, StringFormat='{}{0:dd/MM/yy HH:mm}'}" />
						</WrapPanel>
						<WrapPanel
							Grid.Row="3"
							Grid.Column="1"
							Margin="0,5,0,0"
							Visibility="{Binding RemainingTime, Converter={StaticResource VisibleIfNotNullConverter}}">
							<TextBlock
								VerticalAlignment="Center"
								FontSize="10"
								Foreground="{DynamicResource StatusTextBrush}"
								Text="Remaining: " />
							<TextBlock Text="{Binding RemainingTime, Converter={StaticResource TimespanFormatterConverter}}" />
						</WrapPanel>
					</Grid>
					<Border
						Grid.RowSpan="10"
						Grid.ColumnSpan="10"
						Margin="-5"
						Background="{DynamicResource InvertedTextBrush}"
						CornerRadius="5"
						IsHitTestVisible="False"
						Opacity="0.7"
						Visibility="{Binding IsDone, Converter={StaticResource VisibleIfTrueConverter}}" />
					<CheckBox
						Grid.RowSpan="10"
						Margin="5"
						VerticalAlignment="Center"
						IsChecked="{Binding IsDone, Mode=TwoWay}"
						Style="{StaticResource BigGreenCheckBox}" />
					<controls:ExtendedButton
						Grid.RowSpan="10"
						Grid.Column="2"
						Margin="20,0,5,0"
						Command="{Binding ElementName=root, Path=DataContext.DeleteItemCommand}"
						CommandParameter="{Binding}"
						DisabledBackgroundColour="{DynamicResource DisabledControlClickablePartBrush}"
						DisabledForegroundColour="{DynamicResource StatusTextBrush}"
						Style="{StaticResource RoundButtonStyle}"
						ToolTip="Delete 'to do' item">
						<scalableicons:Icon
							Margin="2"
							Background="{DynamicResource ControlClickablePartBrush}"
							Foreground="{DynamicResource ButtonForegroundBrush}"
							Kind="Bin" />
					</controls:ExtendedButton>
				</Grid>
			</controls:ExtendedButton>
		</DataTemplate>
		<DataTemplate x:Key="GroupedItemTemplate" DataType="{x:Type models:GroupedItems}">
			<Grid Margin="0,0,20,0" VerticalAlignment="Stretch">
				<Grid.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolOrToVisibilityConverter}">
						<Binding ElementName="root" Path="DataContext.IsListHorizontal" />
						<Binding Converter="{StaticResource SequenceHasElementsBooleanConverter}" Path="Items" />
					</MultiBinding>
				</Grid.Visibility>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<TextBlock
					FontSize="15"
					FontWeight="DemiBold"
					Foreground="{DynamicResource TextBrush}"
					Text="{Binding Group}">
					<TextBlock.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolOrToVisibilityConverter}">
							<Binding
								Converter="{StaticResource BoolInverter}"
								ElementName="root"
								Path="DataContext.IsListHorizontal" />
							<Binding Converter="{StaticResource BoolInverter}" Path="ItemsAreDone" />
						</MultiBinding>
					</TextBlock.Visibility>
				</TextBlock>
				<ListBox
					Grid.Row="1"
					Width="290"
					Height="Auto"
					MinHeight="1"
					Margin="10,11,0,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Stretch"
					Background="Transparent"
					BorderThickness="0"
					ItemTemplate="{DynamicResource ToDoItemTemplate}"
					ItemsSource="{Binding Items}" />
			</Grid>
		</DataTemplate>
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="TextBox.Background">
				<Setter.Value>
					<SolidColorBrush Opacity="0.001" Color="Black" />
				</Setter.Value>
			</Setter>
			<Setter Property="TextBox.BorderThickness" Value="0,0,0,1" />
			<Setter Property="TextBox.HorizontalAlignment" Value="Left" />
			<Setter Property="TextBox.VerticalAlignment" Value="Top" />
			<Setter Property="TextBox.MinWidth" Value="100" />
			<Setter Property="TextBox.Margin" Value="10,0,0,0" />
			<Setter Property="TextBox.Padding" Value="0,0,0,3" />
			<Setter Property="TextBox.MaxWidth" Value="200" />
			<Setter Property="TextBox.Foreground" Value="{DynamicResource TextBrush}" />
		</Style>
		<ItemsPanelTemplate x:Key="WrapTemplate" x:Name="WrapTemplate">
			<WrapPanel />
		</ItemsPanelTemplate>
		<ItemsPanelTemplate x:Key="StackTemplate" x:Name="StackTemplate">
			<StackPanel />
		</ItemsPanelTemplate>
	</UserControl.Resources>
	<Grid>
		<Grid
			x:Name="MainGrid"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<Border
				Height="1"
				Margin="10,0"
				VerticalAlignment="Bottom"
				Background="{DynamicResource TextBrush}"
				Opacity="0.1" />
			<Label
				Grid.Column="1"
				Margin="10,5"
				VerticalAlignment="Top"
				Content="{Binding Name}"
				FontSize="30"
				FontWeight="Bold"
				Foreground="{DynamicResource TextBrush}" />
			<controls:ExtendedButton
				Margin="180,4,10,3"
				Padding="4"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Background="{DynamicResource ControlClickablePartBrush}"
				BorderThickness="0"
				Command="{Binding ToggleListStyleCommand}"
				CornerRadius="5"
				DisabledBackgroundColour="{DynamicResource DisabledControlClickablePartBrush}"
				DisabledForegroundColour="{DynamicResource DisabledControlNonClickablePartBrush}"
				Foreground="{DynamicResource StatusTextBrush}"
				MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
				MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
				ToolTip="Toggle 'to do' list appearance">
				<scalableicons:Icon
					x:Name="Bleh"
					Width="18"
					Height="18"
					Margin="1"
					Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=CurrentForeground}">
					<scalableicons:Icon.Style>
						<Style BasedOn="{StaticResource ResourceKey={x:Type scalableicons:Icon}}" TargetType="{x:Type scalableicons:Icon}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsListHorizontal}" Value="True">
									<Setter Property="scalableicons:Icon.Kind" Value="ViewHorizontal" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IsListHorizontal}" Value="False">
									<Setter Property="scalableicons:Icon.Kind" Value="ViewVertical" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</scalableicons:Icon.Style>
				</scalableicons:Icon>
			</controls:ExtendedButton>
			<ScrollViewer
				Grid.Row="1"
				Margin="6,0,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalScrollBarVisibility="Auto"
				PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
				<Grid Margin="0,0,0,20" VerticalAlignment="Stretch">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<WrapPanel VerticalAlignment="Center">
						<Label
							Margin="5"
							VerticalAlignment="Top"
							Content="To do"
							FontSize="15"
							FontWeight="DemiBold"
							Foreground="{DynamicResource TextBrush}" />
						<controls:AutofillTextbox
							MinWidth="200"
							MaxWidth="200"
							Margin="10"
							Padding="0,0,0,3"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							AutofillOptions="{Binding AutofillOptions}"
							BorderBrush="{DynamicResource StatusTextBrush}"
							BorderThickness="0,0,0,1"
							CornerRadius="0"
							Foreground="{DynamicResource TextBrush}"
							Text="{Binding ProposedName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							TextWrapping="Wrap"
							ToolTip="Use ':' to separate group and name to add an item to a group.&#x0a;E.g.: '[Group]:[Name]' will add a 'To Do' item of name [Name] to group [Group]"
							ToolTipService.InitialShowDelay="50">
							<controls:AutofillTextbox.Background>
								<SolidColorBrush Opacity="0.001" Color="Black" />
							</controls:AutofillTextbox.Background>
							<b:Interaction.Triggers>
								<b:EventTrigger EventName="PreviewKeyDown">
									<b:InvokeCommandAction Command="{Binding ToDoItemEditorKeyDownCommand}" PassEventArgsToCommand="True" />
								</b:EventTrigger>
								<b:EventTrigger EventName="TextChanged">
									<b:InvokeCommandAction Command="{Binding ToDoItemEditorKeyDownCommand}" PassEventArgsToCommand="True" />
								</b:EventTrigger>
							</b:Interaction.Triggers>
						</controls:AutofillTextbox>
						<controls:ExtendedButton
							Margin="0,10"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Command="{Binding AddItemCommand}"
							DisabledBackgroundColour="{DynamicResource DisabledControlClickablePartBrush}"
							DisabledForegroundColour="{DynamicResource ControlClickablePartBrush}"
							Foreground="{DynamicResource ButtonForegroundBrush}"
							IsEnabled="{Binding CanAddItem}"
							Style="{StaticResource RoundButtonStyle}"
							ToolTip="Add 'to do' item">
							<scalableicons:Icon
								Margin="2"
								Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=CurrentForeground}"
								Kind="Plus" />
						</controls:ExtendedButton>
					</WrapPanel>
					<ItemsControl Grid.Row="1" Grid.ColumnSpan="2">
						<ItemsControl.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsListHorizontal}" Value="True">
										<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource StackTemplate}" />
									</DataTrigger>
									<DataTrigger Binding="{Binding IsListHorizontal}" Value="False">
										<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource WrapTemplate}" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ItemsControl.Style>
						<ItemsControl.Items>
							<ItemsControl
								Margin="10,11,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Stretch"
								Background="Transparent"
								BorderThickness="0"
								ItemTemplate="{StaticResource GroupedItemTemplate}"
								ItemsSource="{Binding GroupedToDoItems}">
								<ItemsControl.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsListHorizontal}" Value="True">
												<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource WrapTemplate}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding IsListHorizontal}" Value="False">
												<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource StackTemplate}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ItemsControl.Style>
							</ItemsControl>
							<ItemsControl
								Margin="10,11,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Stretch"
								Background="Transparent"
								BorderThickness="0"
								ItemTemplate="{StaticResource GroupedItemTemplate}"
								ItemsSource="{Binding GroupedDoneItems}">
								<ItemsControl.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsListHorizontal}" Value="True">
												<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource WrapTemplate}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding IsListHorizontal}" Value="False">
												<Setter Property="ItemsControl.ItemsPanel" Value="{StaticResource StackTemplate}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ItemsControl.Style>
							</ItemsControl>
						</ItemsControl.Items>
					</ItemsControl>
				</Grid>
			</ScrollViewer>
		</Grid>
		<Grid Grid.RowSpan="10" Visibility="{Binding ShowItemEditPanel, Converter={StaticResource VisibleIfTrueConverter}}">
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource InvertedTextColour}" />
			</Grid.Background>
			<controls:BlurHost
				BlurBackground="{Binding ElementName=MainGrid}"
				Focusable="False"
				RedrawTrigger="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}">
				<Border
					Width="Auto"
					Height="Auto"
					Margin="10"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Background="{DynamicResource MenuBrush}"
					BorderBrush="{DynamicResource MenuBorderBrush}"
					BorderThickness="1"
					CornerRadius="10">
					<Border.Effect>
						<DropShadowEffect
							BlurRadius="30"
							ShadowDepth="0"
							Color="Black" />
					</Border.Effect>
					<Grid>
						<Label
							Margin="5"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							HorizontalContentAlignment="Center"
							Content="Edit Item"
							FontSize="20"
							FontWeight="Bold"
							Foreground="{DynamicResource TextBrush}" />
						<Grid Grid.Row="1" Margin="20,60,20,20">
							<Grid.Resources>
								<Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
									<Setter Property="FontSize" Value="12" />
									<Setter Property="Foreground" Value="{DynamicResource StatusTextBrush}" />
									<Setter Property="HorizontalAlignment" Value="Right" />
									<Setter Property="VerticalAlignment" Value="Top" />
									<Setter Property="Margin" Value="10,0" />
								</Style>
							</Grid.Resources>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="40" />
								<RowDefinition Height="Auto" MinHeight="40" />
								<RowDefinition Height="Auto" MinHeight="40" />
								<RowDefinition Height="Auto" MinHeight="40" />
								<RowDefinition Height="Auto" MinHeight="40" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock
								Margin="10"
								Style="{StaticResource LabelStyle}"
								Text="Name" />
							<TextBox
								Grid.Column="1"
								Margin="10"
								Text="{Binding EditItem.Name, Mode=TwoWay}"
								TextWrapping="Wrap" />
							<TextBlock
								Grid.Row="1"
								Margin="10"
								Style="{StaticResource LabelStyle}"
								Text="Group" />
							<TextBox
								Grid.Row="1"
								Grid.Column="1"
								Margin="10"
								Text="{Binding EditItem.Group, Mode=TwoWay}"
								TextWrapping="Wrap" />
							<TextBlock
								Grid.Row="2"
								Margin="10"
								Style="{StaticResource LabelStyle}"
								Text="Description" />
							<TextBox
								Grid.Row="2"
								Grid.Column="1"
								Margin="10"
								Text="{Binding EditItem.Description, Mode=TwoWay}"
								TextWrapping="Wrap" />
							<TextBlock
								Grid.Row="3"
								Margin="10"
								Style="{StaticResource LabelStyle}"
								Text="Deadline" />
							<controls:DatetimeTextBox
								Grid.Row="3"
								Grid.Column="1"
								Width="Auto"
								Height="20"
								Margin="10"
								VerticalAlignment="Top"
								VerticalContentAlignment="Center"
								BorderBrush="LightGray"
								BorderThickness="0,0,0,1"
								DateTime="{Binding EditItem.Deadline, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Style="{StaticResource ResourceKey={x:Type controls:DatetimeTextBox}}"
								WarningBrush="{DynamicResource StatusTextBrush}" />
							<TextBlock
								Grid.Row="4"
								Margin="10"
								Style="{StaticResource LabelStyle}"
								Text="Warning threshold" />
							<WrapPanel
								Grid.Row="4"
								Grid.Column="1"
								Margin="10">
								<TextBox
									MinWidth="40"
									Margin="0"
									Text="{Binding EditItem.WarningBeforeDeadlineDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<TextBlock
									Margin="5,0,0,0"
									VerticalAlignment="Center"
									FontSize="12"
									Foreground="{DynamicResource StatusTextBrush}"
									Text="days" />
							</WrapPanel>
						</Grid>
						<controls:ExtendedButton
							Width="40"
							Height="30"
							Margin="0"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Background="Transparent"
							BorderThickness="0"
							Command="{Binding CloseEditPanelCommand}"
							CornerRadius="0,10,0,10"
							DisabledBackgroundColour="Transparent"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
							<scalableicons:Icon
								Width="10"
								Height="10"
								Foreground="{DynamicResource TextBrush}"
								Kind="Close" />
						</controls:ExtendedButton>
					</Grid>
				</Border>
			</controls:BlurHost>
		</Grid>
	</Grid>
</UserControl>
